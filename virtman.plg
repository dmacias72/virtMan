<?xml version='1.0' standalone='yes'?>

<!DOCTYPE PLUGIN [
<!ENTITY name      "virtman">
<!ENTITY author    "dmacias">
<!ENTITY version   "2014.09.12c">
<!ENTITY category  "VM Support">
<!ENTITY pluginURL "https://github.com/dmacias72/virtman_unRAID_6/raw/master/virtman.plg">
]>

<PLUGIN  name="&name;"
         author="&author;"
         version="&version;"
         category="&category;"
         pluginURL="&pluginURL;">

<!--
This Plugin mounts a loopback image for Libvirt 1.2.8 and up

Credits:
Troy Wagner: Heavily updated this plugin originally created / modified by Tim Alexander.
	This now contains more options and some validity to information added as to not break the app with invalid options.
	When invalid options are found, default values are loaded in its place.
	Spaces will be replaced with _ as passing anythign with a space breaks these plugins.
	Empty values which also break plugins, are replaced with default values also.
Infuencer
Benni-Chan: Much of the plug-in structure from his original plug-ins. Much of that code is still in place.
-->

<FILE Name="/tmp/plugin-prepare" Run="/bin/bash">
<INLINE>
# Wait until network is ready
timer=30
while [ $timer -gt 0 ]; do
	gateway=$(route -n | awk '/^0.0.0.0/ {print $2}')
	if [ -n "$gateway" ] &amp;&amp; [ $(ping -q -n -c 1 $gateway | awk -F, '/received/ {print $2}' | awk '{print $1}') -eq 1 ]; then
		break
	fi
	timer=$((timer-1))
	sleep 1
done
if [ $timer -eq 0 ]; then
	echo "No network communication !!!"
fi
# Remove this script
rm -f /tmp/plugin-prepare
</INLINE>
</FILE>

<FILE Name="/boot/config/plugins/virtman/virtman.png">
<URL>https://raw.githubusercontent.com/dmacias72/virtman_unRAID_6/master/virtman.png</URL>
</FILE>

<FILE Name="/boot/config/plugins/virtman/virtman.png">
<URL>https://raw.githubusercontent.com/dmacias72/virtman_unRAID_6/master/virtman.png</URL>
</FILE>

<FILE Name="/boot/config/plugins/virtman/virtman.img">
<URL>https://raw.githubusercontent.com/dmacias72/virtman_unRAID_6/master/virtman.img</URL>
</FILE>

<FILE Name="/boot/config/plugins/images/device_status.png">
<URL>https://raw.githubusercontent.com/dmacias72/unRAID_6.0/master/device_status.png</URL>
</FILE>

<FILE Name="/boot/config/plugins/images/new_config.png">
<URL>https://raw.githubusercontent.com/dmacias72/unRAID_6.0/master/new_config.png</URL>
</FILE>

<FILE Name="/boot/config/plugins/images/information.png">
<URL>https://raw.githubusercontent.com/dmacias72/unRAID_6.0/master/information.png</URL>
</FILE>

<FILE Name="/boot/config/plugins/virtman/virtman.cfg">
<INLINE>
<![CDATA[
# virtman configuration:
SERVICE="enable"
]]>
</INLINE>
</FILE>

<FILE Name="/tmp/hp-chkconf" Run="/bin/bash">
<INLINE>
<![CDATA[
#!/bin/sh
# This will check each entry in the config so nothing is missing, and if missing, sets to default
CFGFILE=/boot/config/plugins/virtman/virtman.cfg
[ ! `cat "$CFGFILE" | grep SERVICE` ] && echo "SERVICE=\"enable\"" >> "$CFGFILE"
rm /tmp/hp-chkconf
]]>
</INLINE>
</FILE>

<FILE Name="/etc/rc.d/rc.virtman" Mode="0770">
<INLINE>
<![CDATA[
#!/usr/bin/bash

PIDFILE="/var/run/libvirt/libvirtd.pid"

virtman_start() {
  # no-op if not enabled
  if [ "$SERVICE" != "enable" ]; then
    sed -i 's/disable/enable/' "$CONFIG"
  fi

  # no-op if already running
  if [ -f /proc/`cat "$PIDFILE" 2> /dev/null`/exe ]; then
    echo "libvirt is already running."
	return
  else
      if [ -f "$PIDFILE" ]; then
        echo "Removing stale lock file from previous execution."
	rm -f "$PIDFILE"
      fi
  fi

  # mount conf image if not already mounted 
  if [ ! "$(mount | grep virtman.img)" ]; then
    mount -t ext4 /boot/config/plugins/virtman/virtman.img /etc/libvirt
  fi

  echo "Starting libvirtd..."
  sleep 1
  sudo -u root /bin/bash -c "/etc/rc.d/rc.libvirt start"	
}

virtman_stop() {
  if [ ! -f $PIDFILE ];then
    echo "libvirt is not running..."
    exit 2
  fi
  /etc/rc.d/rc.libvirt stop
}

virtman_restart()
{
	virtman_stop
	sleep 2
	virtman_start
}

virtman_buttonstart()
{
	CONFIG="/boot/config/plugins/virtman/virtman.cfg"
	if [[ "CONFIG" ]]; then
		virtman_start
	else
		echo "No config file found. Press reinstall the plugin."
		sleep 3
	fi
}

write_config()
{
	sleep 1
	# Write to the config file
	echo "# virtman configuration:" > /boot/config/plugins/virtman/virtman.cfg
	echo "SERVICE=\"$SERVICE\"" >> /boot/config/plugins/virtman/virtman.cfg
	sleep 1
}

virtman_enable()
{
	SERVICE=enable
	write_config
}

virtman_disable()
{
	SERVICE=disable
	write_config
}

virtman_curver()
{
	# This gets the current version installed
	
	CURVER=`virsh --version`	

	echo "$CURVER"
}

virtman_storagesize() 
{
	# Get size of config image size
	TOTALSIZE=`ls -lah "/boot/config/plugins/virtman/virtman.img" | awk '{ print $5}'`

	# Create the HTML response - Add insatall directory
	LINE="<p style="margin-left:10px\;margin-bottom:0px\;"><b>Total Storage Usage: $TOTALSIZE MB</b>"
	LINE="$LINE<ul style="margin-top:0px\;"><li>Config Directory: $INSTSIZE MB</li>"
	LINE="$LINE</ul></p>"
	echo "$LINE"
}

virtman_datacheck() 
{
if [ ! "$(mount | grep virtman.img)" ]; then
		echo "<p style="color:red\;margin-left:10px\;margin-right:10px\;"><b>WARNING:</b> Your config image is not mounted. You likely need to restart the plugin.</p>"
	fi
}

# read our configuration
source /boot/config/plugins/virtman/virtman.cfg
CONFIG="/boot/config/plugins/virtman/virtman.cfg"

case "$1" in
	'start')
		virtman_start
	;;
	'stop')
		virtman_stop
	;;
	'restart')
		virtman_restart
	;;
	'enable')
		virtman_enable $2 $3 $4 
	;;
	'disable')
		virtman_disable $2 $3 $4 
	;;
	'storagesize')
		virtman_storagesize
	;;
	'datacheck')
		virtman_datacheck
	;;
	'buttonstart')
		virtman_buttonstart
	;;
	'currentversion')
		virtman_curver
	;;
	*)
	echo "usage $0 start|stop|restart|enable|disable|storagesize|datacheck|currentversion"
esac
]]>
</INLINE>
</FILE>

<FILE Name="/usr/local/emhttp/plugins/virtman/virtman.page">
<INLINE>
<![CDATA[
Menu="OtherSettings"
Icon="virtman.png"
Author="Derek Macias"
Type="php"
Title="Virtman"
]]>
</INLINE>
</FILE>

<FILE Name="/usr/local/emhttp/plugins/virtman/virtman.png">
<LOCAL>/boot/config/plugins/virtman/virtman.png</LOCAL>
</FILE>

<FILE Name="/usr/local/emhttp/plugins/virtman/device_status.png">
<LOCAL>/boot/config/plugins/images/device_status.png</LOCAL>
</FILE>

<FILE Name="/usr/local/emhttp/plugins/virtman/new_config.png">
<LOCAL>/boot/config/plugins/images/new_config.png</LOCAL>
</FILE>

<FILE Name="/usr/local/emhttp/plugins/virtman/information.png">
<LOCAL>/boot/config/plugins/images/information.png</LOCAL>
</FILE>

<FILE Name="/usr/local/emhttp/plugins/virtman/virtman.css">
<INLINE>
<![CDATA[
<style type="text/css">
#updatebutton {
border-collapse: separate;
	-moz-box-shadow:inset 0px 1px 0px 0px #dcecfb;
	-webkit-box-shadow:inset 0px 1px 0px 0px #dcecfb;
	box-shadow:inset 0px 1px 0px 0px #dcecfb;
	background-color:#bddbfa;
	background-image: -webkit-gradient(linear, 0 0, 0 100%, from(#bddbfa), to(#80b5ea));
	background-image: -moz-linear-gradient(#bddbfa, #80b5ea);
	background-image: -o-linear-gradient(#bddbfa, #80b5ea);
	background-image: linear-gradient(#bddbfa, #80b5ea);
	filter:progid:DXImageTransform.Microsoft.gradient(startColorstr='#bddbfa', endColorstr='#80b5ea');
	ms-filter: "progid:DXImageTransform.Microsoft.Gradient(GradientType=0,StartColorStr=#bddbfa,EndColorStr=#80b5ea)";
	text-indent:0;
	border:1px solid #84bbf3;
	display:inline-block;
	color:#ffffff;
	font-family:Arial;
	font-size:15px;
	font-weight:bold;
	font-style:normal;
	text-align:center;
	text-shadow:1px 1px 0px #528ecc;
	-webkit-transition: all 300ms ease-in;
	-moz-transition: all 300ms ease-in;
	-o-transition: all 300ms ease-in;
	-ms-transition: all 300ms ease-in;
	transition: all 300ms ease-in;
}
#updatebutton:hover {
	border:1px solid #4fa1f4;
	-moz-box-shadow:inset 0px 0px 8px 4px #67aef6;
	-webkit-box-shadow:inset 0px 0px 8px 4px #67aef6;
	box-shadow:inset 0px 0px 8px 4px #67aef6;
	-webkit-transition: all 300ms ease-out;
	-moz-transition: all 300ms ease-out;
	-o-transition: all 300ms ease-out;
	-ms-transition: all 300ms ease-out;
	transition: all 300ms ease-out;
}
#updatebutton:active {
	border:1px solid #4fa1f4;
	-moz-box-shadow:inset 0px 0px 8px 4px #67aef6;
	-webkit-box-shadow:inset 0px 0px 8px 4px #67aef6;
	box-shadow:inset 0px 0px 8px 4px #67aef6;
	position:relative;
	top:1px;
	left:1px;
}
#title {
	margin-top: 15px;
	margin-bottom: 20px;
	height: 35px;
	line-height: 35px;
	-webkit-border-top-left-radius: 5px;
	-webkit-border-top-right-radius: 5px;
	-webkit-border-bottom-left-radius: 0;
	-webkit-border-bottom-right-radius: 0;
	-moz-border-radius-topleft: 5px;
	-moz-border-radius-topright: 5px;
	-moz-border-radius-bottomleft: 0;
	-moz-border-radius-bottomright: 0;
	border-top-left-radius: 5px;
	border-top-right-radius: 5px;
	border-bottom-left-radius: 0;
	border-bottom-right-radius: 0;
	border: 1px solid #e9e9e9;
	border-bottom: 1px solid #DDDDDD;
	background: #e6e6e6;
	background: -moz-linear-gradient(top, #F3F3F3 0%, #EEEEEE 100%);
	background: -webkit-gradient(linear, left top, left bottom, color-stop(0%,#F3F3F3), color-stop(100%,#EEEEEE));
	filter: progid:DXImageTransform.Microsoft.gradient( startColorstr='#F3F3F3', endColorstr='#EEEEEE', GradientType=0 );
	color: #333333;
	clear: both;
}
#title a, a:hover {
	color: #333333;
}
#title span.left {
	font-size: 15px;
	padding-left: 10px;
	float: left;
	text-shadow: 0 1px 1px #FFFFFF;
}
#title span.right {
	font-size: 10px;
	font-weight: normal;
	padding-right: 10px;
	float: right;
}
.green {
	color: #6fa239;
	padding-left: 5px;
	padding-right: 5px;
}
.red {
	color: #cc0000;
	padding-left: 5px;
	padding-right: 5px;
}
</style>
]]>
</INLINE>
</FILE>

<FILE Name="/usr/local/emhttp/plugins/virtman/virtman.php">
<INLINE>
<![CDATA[
<?php include '/usr/local/emhttp/plugins/virtman/virtman.css';?>
<?PHP
# -------------------------------------------------------------------------
## Load current config file and check if program is installed already
# -------------------------------------------------------------------------

#check if there is internet conneciton to page doesn't stall out
$connected = @fsockopen("www.google.com", 80, $errno, $errstr, 5);
if ($connected){
	$is_conn = "true";
	fclose($connected);
} else {
	$is_conn = "false";
}

# This will clean any ^M characters caused by windows from the config file before use
if (file_exists("/boot/config/plugins/virtman/virtman.cfg"))
	shell_exec("sed -i 's!\r!!g' '/boot/config/plugins/virtman/virtman.cfg'");

$virtman_cfg = parse_ini_file( "/boot/config/plugins/virtman/virtman.cfg" );

# -------------------------------------------------------------------------
## Collect local variables from config files and verify data as best as possible
# -------------------------------------------------------------------------

# Service Status Variable
if (isset($virtman_cfg['SERVICE']) && ($virtman_cfg['SERVICE'] == "enable" || $virtman_cfg['SERVICE'] == "disable"))
	$virtman_service = $virtman_cfg['SERVICE'];
else
	$virtman_service = "enable";

# -------------------------------------------------------------------------
## Check is program is running to get extra information
# -------------------------------------------------------------------------
	$virtman_running = trim ( shell_exec ( "[ -f /proc/`cat /var/run/libvirt/libvirtd.pid 2> /dev/null`/exe ] && echo 'yes' || echo 'no' 2> /dev/null" ) );
	if ($virtman_running == "yes")
		$virtman_updatestatus = "Running";
	else
		$virtman_updatestatus = "Stopped";

	$virtman_storagesize = shell_exec ( "/etc/rc.d/rc.virtman storagesize" );
	$virtman_datacheck = shell_exec ( "/etc/rc.d/rc.virtman datacheck" );

	# Get current installed version of the program
	$virtman_curversion = trim ( shell_exec ( "virsh --version" ) );
	if ($virtman_curversion == "")
		$virtman_curversion = "couldn't determine the libvirt version"; 
?>

<div style="width: 49%; float:left">
	<div id="title">
		<span class="left">Status:&#32;<img src='/plugins/virtman/device_status.png'>
			<?if ($virtman_running=="yes"):?>
				<a href="" target="_blank">
					<span class="green"><b>RUNNING</b></span>
				</a>
				<span style="font-size:12px;"> with version: <b><?=$virtman_curversion?></b></span>
			<?else:?>
				<span class="red"><b>STOPPED</b></span>
			<?endif;?>
		</span>
	</div>  
		<?if ($virtman_running=="yes"):?>
			<div style="position:relative;float:left;width:50%;text-align:right; margin-bottom:24px">
				<form name="virtman_start_stop" method="POST" action="/update.htm" target="progressFrame">
					<input type="hidden" name="cmd" value="/etc/rc.d/rc.virtman stop">
					<input type="submit" name="runCmd" value="Stop">
				</form>
			</div>
			<div style="position:relative;float:left;width:50%;margin-bottom:24px">
				<form name="virtman_restart" method="POST" action="/update.htm" target="progressFrame">
					<input type="hidden" name="cmd" value="/etc/rc.d/rc.virtman restart">
					<input type="submit" name="runCmd" value="Restart">
				</form>
			</div>
		<?else:?>
			<div style="position:relative;float:left;width:100%;text-align:center;margin-bottom:24px">
				<form name="virtman_start" method="POST" action="/update.htm" target="progressFrame">
					<input type="hidden" name="cmd" value="/etc/rc.d/rc.virtman buttonstart">
					<input type="submit" name="runCmd" value="Start">
				</form>
			</div>
		<?endif;?>
	<div id="title">
		<span class="left">Information:&#32;<img src='/plugins/virtman/information.png'></span>
	</div>
	<?=$virtman_storagesize?>
	<?=$virtman_datacheck?>
	<? if ($is_conn == "false"):?>
		<p style="color:red;margin-left:10px;"><b>No Internet Connection Detected</b></p>
	<? endif; ?>
</div>
<div style="width: 49%; float:right">
	<div id="title">
		<span class="left">Configuration:&#32;<img src='/plugins/virtman/new_config.png'></span>
	</div>
	<form name="virtman_settings" method="POST" action="/update.htm" target="progressFrame">
		<input type="hidden" name="cmd" value="/etc/rc.d/rc.virtman">
		<table class="settings">
			<tr>
				<td>Enable libvirt:</td>
				<td>
					<select name="arg1" size="1">
						<?=mk_option($virtman_service, "disable", "No");?>
						<?=mk_option($virtman_service, "enable", "Yes");?>
					</select>
				</td>
			</tr>
			<tr><td colspan="2"><div style="background-color:#FFFFFF;border:1px solid #000000;height:1px;width:100%;font-size:8px;"> </div></td></tr>
		</table>
		<div align="center">
			<input type="submit" name="runCmd" value="Apply" style="margin-bottom:8px" onClick="">
			<button type="button" style="margin-bottom:35px" onClick="done();">Done</button>
		</div>
	</form>
	<br/>
</div>

<script type="text/javascript">

function isNumber(n) {
	return !isNaN(parseFloat(n)) && isFinite(n);
}

</script>
]]>
</INLINE>
</FILE>

<!-- create plugin README.md file -->
<FILE Name="/usr/local/emhttp/plugins/&name;/README.md">
<INLINE>
**Libvirt support**

Libvirt is collection of software that provides a convenient way to manage virtual machines and other virtualization functionality, such as storage and network interface management. These software pieces include an API library, a daemon (libvirtd), and a command line utility (virsh). Virtman allows control and persistent configuration for libvirt.
</INLINE>
</FILE>

<!-- The 'remove' script. -->
<FILE Run="/bin/bash" Method="remove">
<INLINE>
rm -r /usr/local/emhttp/plugins/&name;
rm -f /etc/rc.d/rc.virtman
if [ "$(mount | grep virtman.img)" ]; then
  umount /etc/libvirt
fi

</INLINE>
</FILE>

<FILE Name="/tmp/virtman-install" Run="/bin/bash">
<INLINE>
<![CDATA[
# include our config vars
source /boot/config/plugins/virtman/virtman.cfg

# mount conf image if not already mounted 
if [ ! "$(mount | grep virtman.img)" ]; then
  mount -t ext4 /boot/config/plugins/virtman/virtman.img /etc/libvirt
fi

rm /tmp/virtman-install
]]>
</INLINE>
</FILE>

</PLUGIN>
